version: "3.9"  # optional since v1.27.0
services:
  odata-proxy:
    build: containers/odata-proxy/
    deploy:
      replicas: ${ODATA_PROXY_SCALE}
    environment:
      AZURE_APPID: "${AZURE_APPID}"
      AZURE_JWKSURI: "${AZURE_JWKSURI}"
      AZURE_ISSUER: "${AZURE_ISSUER}"
      SAP_ENDPOINT: "${SAP_ENDPOINT}"
    links:
      - ca-service
    depends_on: 
      - ca-service
  ingress:
    build: 
      context: containers/ingress/
      args:
        CERT_SUBJECT: "${INGRESS_CERT_SUBJ}"
    ports:
      - "${INGRESS_HTTP_PORT}:80"
      - "${INGRESS_HTTPS_PORT}:443"
    depends_on:
      - odata-proxy
  ca-service:
    build: containers/vault/
    ports:
     - "8200:8200"
    volumes:
      - vault-file:/vault/file
      - vault-logs:/vault/logs
    cap_add:
      - IPC_LOCK
  ca-service-setup:
    depends_on:
      - ca-service
    build: containers/ca-service-setup/
    links:
      - "ca-service"
    volumes:
      - vault-secrets:/mnt/secrets
    environment:
      AZURE_OIDC_DISCOVERY_URL: "${AZURE_OIDC_DISCOVERY_URL}"
      AZURE_OIDC_ISSUER: "${AZURE_OIDC_ISSUER}"
      AZURE_APPID: "${AZURE_APPID}"
      VAULT_ADDR: 'http://ca-service:8200'
      VAULT_FORMAT: 'json'
      VAULT_SECRETS_S: "${VAULT_SECRETS_S}"
      VAULT_SECRETS_T: "${VAULT_SECRETS_T}"
      VAULT_RECOVERY_S: "${VAULT_RECOVERY_S}"
      VAULT_RECOVERY_T: "${VAULT_RECOVERY_T}"
      ROOTCA_CN: "${VAULT_ROOTCA_CN}"
      SUBCA_CN: "${VAULT_SUBCA_CN}"
      OU: "${VAULT_OU}"
      ORG: "${VAULT_ORG_NAME}"
      VAULT_CLIENT_CERT_TTL: "${VAULT_CLIENT_CERT_TTL}"
      PRINT_TOKENS: 'false' #Setting this will print out the root token in the logs. So be careful
volumes: 
  vault-file:
  vault-logs:
  vault-secrets:
    
